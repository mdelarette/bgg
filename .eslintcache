[{"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\contexts\\modal-context.js":"1","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Footer.js":"2","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\PartySelection.js":"3","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GamesFromIds.js":"4","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GameInModal.js":"5","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\utils\\Gravatar.js":"6","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\store\\configure.js":"7","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\ModalGame.js":"8","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\constants\\pages.ts":"9","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\action\\index.js":"10","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\selectors\\index.js":"11","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\serviceWorker.js":"12","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Games.js":"13","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Player.js":"14","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Players.js":"15","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\index.js":"16","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\reducers\\index.js":"17","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\App.js":"18","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\WishedGames.js":"19","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GameRow.js":"20","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Party.js":"21","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\PageGames.js":"22","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\FilteredGames.js":"23","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\TableGamesFromIds.js":"24","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\TableRowGameFromId.js":"25"},{"size":200,"mtime":1607954802751,"results":"26","hashOfConfig":"27"},{"size":1162,"mtime":1573637145464,"results":"28","hashOfConfig":"27"},{"size":451,"mtime":1573639841280,"results":"29","hashOfConfig":"27"},{"size":1215,"mtime":1573653902655,"results":"30","hashOfConfig":"27"},{"size":4111,"mtime":1608047021098,"results":"31","hashOfConfig":"27"},{"size":6950,"mtime":1570802103405,"results":"32","hashOfConfig":"27"},{"size":885,"mtime":1554820531033,"results":"33","hashOfConfig":"27"},{"size":519,"mtime":1608042284261,"results":"34","hashOfConfig":"27"},{"size":130,"mtime":1573638511166,"results":"35","hashOfConfig":"27"},{"size":5643,"mtime":1608038521592,"results":"36","hashOfConfig":"27"},{"size":6422,"mtime":1608042440706,"results":"37","hashOfConfig":"27"},{"size":4951,"mtime":499162500000,"results":"38","hashOfConfig":"27"},{"size":405,"mtime":1573637218842,"results":"39","hashOfConfig":"27"},{"size":4310,"mtime":1607964862834,"results":"40","hashOfConfig":"27"},{"size":920,"mtime":1607964760869,"results":"41","hashOfConfig":"27"},{"size":1560,"mtime":1608047026996,"results":"42","hashOfConfig":"27"},{"size":1620,"mtime":1573210315345,"results":"43","hashOfConfig":"27"},{"size":8525,"mtime":1608046817409,"results":"44","hashOfConfig":"27"},{"size":429,"mtime":1573637260758,"results":"45","hashOfConfig":"27"},{"size":5741,"mtime":1607954891081,"results":"46","hashOfConfig":"27"},{"size":1710,"mtime":1581093224733,"results":"47","hashOfConfig":"27"},{"size":3363,"mtime":1608050365538,"results":"48","hashOfConfig":"27"},{"size":447,"mtime":1608041807998,"results":"49","hashOfConfig":"27"},{"size":1771,"mtime":1608050695954,"results":"50","hashOfConfig":"27"},{"size":1723,"mtime":1608048881672,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"78ydfa",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\contexts\\modal-context.js",[],["113","114"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Footer.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\PartySelection.js",[],["115","116"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GamesFromIds.js",[],["117","118"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GameInModal.js",["119"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getGameData } from \"../selectors\";\r\n\r\nimport { get_gravatar } from \"../utils/Gravatar\";\r\n\r\nimport { Avatar, IconButton, Typography } from \"@material-ui/core\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    closeButton: {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n    dialogTitleRoot: {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n\r\n    dialogContent: {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n\r\n    dialogActions: {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n\r\n    dialogTitle: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n      color: \"white\",\r\n    },\r\n\r\n    dialogTitleName: {\r\n      flexGrow: 1,\r\n      paddingLeft: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nconst GameInModal = ({ id, game, setModalGameId }) => {\r\n  const classes = useStyles();\r\n\r\n  if (!game) {\r\n    return null;\r\n    // return (\r\n    //   <div className=\"w3-margin w3-card w3-yellow\">\r\n    //     <h3>no game :(</h3>\r\n    //   </div>\r\n    // );\r\n  }\r\n\r\n  console.log(JSON.stringify(game, null, 2));\r\n\r\n  const NbPlayers = () => {\r\n    if (game.min === game.max && game.min === \"1\") {\r\n      return `Solo game`;\r\n    }\r\n\r\n    if (game.min === game.max && game.min === \"2\") {\r\n      return `Duel game`;\r\n    }\r\n\r\n    if (game.min === game.max) {\r\n      return `Exactly ${game.min} players`;\r\n    }\r\n\r\n    return `Number of players from ${game.min} to ${game.max}`;\r\n  };\r\n\r\n  const Owners = () => {\r\n    return game.owners\r\n      ? game.owners.map((owner, index) => <Owner key={index} owner={owner} />)\r\n      : \"\";\r\n  };\r\n\r\n  const Owner = ({ owner }) => {\r\n    var gravatar = owner.email ? get_gravatar(owner.email, 30) : null;\r\n\r\n    if (gravatar) {\r\n      return (\r\n        <img\r\n          alt=\"gravatar\"\r\n          src={gravatar}\r\n          className=\"w3-bar-item w3-circle\"\r\n          style={{ width: \"30px\" }}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (!gravatar && owner.thumbnail) {\r\n      return (\r\n        <img\r\n          alt=\"thumbnail\"\r\n          src={owner.thumbnail}\r\n          className=\"w3-bar-item w3-circle\"\r\n          style={{ width: \"30px\" }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle className={classes.dialogTitleRoot}>\r\n        <div className={classes.dialogTitle}>\r\n          <Avatar src={game.thumbnail} variant=\"rounded\" />\r\n          <Typography variant=\"h6\" className={classes.dialogTitleName}>\r\n            {game.name}\r\n          </Typography>\r\n          <IconButton\r\n            className={classes.closeButton}\r\n            onClick={() => {\r\n              setModalGameId(\"0\");\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <DialogContent className={classes.dialogContent}>\r\n        <Typography variant=\"h6\">\r\n          <NbPlayers />\r\n        </Typography>\r\n        <Typography variant=\"h6\">Minimum age: {game.minage}</Typography>\r\n\r\n        <Owners />\r\n\r\n        <Typography variant=\"body1\" style={{ whiteSpace: \"pre-line\" }}>\r\n          {game.description}\r\n        </Typography>\r\n      </DialogContent>\r\n\r\n      <DialogActions className={classes.dialogActions}>\r\n        <p>\r\n          <a href={\"https://boardgamegeek.com/boardgame/\" + id}>\r\n            View on boardgamegeek.com\r\n          </a>\r\n        </p>\r\n\r\n        <p>\r\n          <a href={\"https://melodice.org/playlist/\" + game.name}>\r\n            Melodice.org\r\n          </a>\r\n        </p>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { game: getGameData(state, ownProps) };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(GameInModal);\r\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\utils\\Gravatar.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\store\\configure.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\ModalGame.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\constants\\pages.ts",[],["120","121"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\action\\index.js",["122","123"],"import { parseString } from \"xml2js\";\r\nimport axios from \"axios\";\r\nimport he from \"he\";\r\n\r\nconst axiosConfig = {\r\n  headers: { \"Access-Control-Allow-Origin\": true },\r\n};\r\n\r\nexport const UPDATE_PARTY = \"UPDATE_PARTY\";\r\nexport const updatePartyToStore = (party) => {\r\n  console.log(\"updatePartyToStore !!!\");\r\n  return {\r\n    type: UPDATE_PARTY,\r\n    payload: {\r\n      party,\r\n    },\r\n  };\r\n};\r\n\r\nexport const ADD_PLAYER = \"ADD_PLAYER\";\r\nexport const addPlayerToStore = (player) => {\r\n  return {\r\n    type: ADD_PLAYER,\r\n    payload: {\r\n      player,\r\n    },\r\n  };\r\n};\r\n\r\nexport const DELETE_PLAYER = \"DELETE_PLAYER\";\r\nexport const deletePlayerFromStore = (playerId) => {\r\n  return {\r\n    type: DELETE_PLAYER,\r\n    payload: {\r\n      playerId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const UPDATE_PLAYER = \"UPDATE_PLAYER\";\r\nexport const updatePlayerToStore = (playerId, playerData) => {\r\n  console.log(\r\n    \"updatePlayerToStore\",\r\n    playerId,\r\n    JSON.stringify(playerData, null, 2)\r\n  );\r\n  return {\r\n    type: UPDATE_PLAYER,\r\n    payload: {\r\n      playerId,\r\n      playerData,\r\n    },\r\n  };\r\n};\r\n\r\n// https://boardgamegeek.com/wiki/page/BGG_XML_API2\r\n\r\nexport const FETCH_PLAYER_GAMES = \"FETCH_PLAYER_GAMES\";\r\n\r\nconst setPlayerGames = (playerId, ownership, games) => ({\r\n  type: \"FETCH_PLAYER_GAMES\",\r\n  payload: { playerId, ownership, games },\r\n});\r\n\r\nconst gamesFromResponse = (response, playerId) => {\r\n  var games = [];\r\n\r\n  parseString(response.data, function (err, _games) {\r\n    games = _games.items.item.map((x, index) => {\r\n      // console.log(`_games.items.item[${index}]=`, x);\r\n\r\n      let game = {\r\n        gameId: x.$.objectid,\r\n        playerId: playerId,\r\n        // name: x.name[0]._,\r\n        status: x.status[0].$,\r\n      };\r\n\r\n      //console.log(`games[${index}]=`, JSON.stringify(game, null, 2));\r\n\r\n      return game;\r\n    });\r\n  });\r\n\r\n  return games;\r\n};\r\n\r\nexport const fetchPlayerGames = (player) => async (dispatch, getState) => {\r\n  // Appel à l'api\r\n  console.log(\"fetchPlayerGames\", player.id, player.bggName);\r\n\r\n  var games = [];\r\n  var ownership = [];\r\n\r\n  // TODO check how we can get rid of \"Access-Control-Allow-Origin\" at https://www.html5rocks.com/en/tutorials/cors/\r\n\r\n  // TODO treat : answer 202\r\n  // <?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\r\n  //  <message>\r\n  //   Your request for this collection has been accepted and will be processed.  Please try again later for access.\r\n  //  </message>\r\n\r\n  await axios(\r\n    `https://www.boardgamegeek.com/xmlapi2/collection?username=${player.bggName}`\r\n  )\r\n    .then(async function (response) {\r\n      if (response.code === 202) {\r\n        console.log(\"we should retry\");\r\n      } else {\r\n        games = gamesFromResponse(response, player.id);\r\n      }\r\n\r\n      const nextResponse = await axios.get(\r\n        `https://www.boardgamegeek.com/xmlapi2/collection?username=${player.bggName}`\r\n      );\r\n      ownership = games.filter(uniqueId);\r\n\r\n      // Remove games already known to limit the fetch !\r\n\r\n      var existingIds = getState().bgg.games.map((game) => game.id);\r\n\r\n      var idsArray = ownership.map((o) => o.gameId);\r\n      idsArray = idsArray.filter(\r\n        (id) => existingIds.find((x) => x === id) === undefined\r\n      );\r\n\r\n      if (idsArray.length > 0) {\r\n        var idsQueryString = idsArray.reduce((acc, id) => acc + `${id},`, \"\");\r\n        idsQueryString = idsQueryString.slice(0, idsQueryString.length - 1);\r\n\r\n        const responseGame = await axios.get(\r\n          `https://www.boardgamegeek.com/xmlapi2/thing?id=${idsQueryString}`\r\n        );\r\n        parseString(responseGame.data, function (err, _games) {\r\n          //   console.log(\"_games=\", _games);\r\n          // console.log(\"_games.items=\", _games.items);\r\n\r\n          // TODO check x.$.type === 'boardgameexpansion'\r\n\r\n          games = _games.items.item.map((x, index) => {\r\n            // if (index === 0) {\r\n            // console.log(`_games.items.item[${index}]=`, x);\r\n            // }\r\n\r\n            // if (x.$.id === \"822\") {\r\n            // console.log(`_games.items.item[${index}]=`, x);\r\n            // }\r\n\r\n            let game = {\r\n              id: x.$.id,\r\n              type: x.$.type,\r\n              name: x.name[0].$.value,\r\n              minage: x.minage[0].$.value,\r\n              min: x.minplayers[0].$.value,\r\n              max: x.maxplayers[0].$.value,\r\n              minplaytime: x.minplaytime[0].$.value,\r\n              maxplaytime: x.maxplaytime[0].$.value,\r\n              playingtime: x.playingtime[0].$.value,\r\n              image: x.image[0],\r\n              thumbnail: x.thumbnail[0], // FIT IN 200x150\r\n              description: he.decode(x.description[0]),\r\n            };\r\n\r\n            if (game.type === \"boardgameexpansion\") {\r\n              game.extends = x.link.reduce((accumulator, currentValue) => {\r\n                if (currentValue.$.type === \"boardgameexpansion\") {\r\n                  accumulator.push(currentValue.$.id);\r\n                }\r\n                return accumulator;\r\n              }, []);\r\n            }\r\n\r\n            // console.log(`games[${index}]=`, JSON.stringify(game, null, 2));\r\n\r\n            return game;\r\n          });\r\n          return;\r\n        });\r\n      }\r\n\r\n      dispatch(setPlayerGames(player.id, ownership, games));\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    })\r\n    .then(function () {\r\n      // always executed\r\n      // setLoading(false);\r\n    });\r\n};\r\n\r\nfunction uniqueId(value, index, self) {\r\n  return (\r\n    self\r\n      .slice(index + 1)\r\n      .findIndex(\r\n        (currentValue, i, r) => currentValue.gameId === value.gameId\r\n      ) === -1\r\n  );\r\n}\r\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\selectors\\index.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\serviceWorker.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Games.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Player.js",["124"],"// import React, { Component } from \"react\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  updatePlayerToStore,\r\n  deletePlayerFromStore,\r\n  fetchPlayerGames,\r\n} from \"../action\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport { get_gravatar } from \"../utils/Gravatar\";\r\n\r\nconst Player = ({\r\n  player,\r\n  updatePlayerToStore,\r\n  deletePlayerFromStore,\r\n  fetchPlayerGames,\r\n}) => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [name, setName] = React.useState(player.name);\r\n  const [bggName, setBggName] = React.useState(player.bggName);\r\n  const [age, setAge] = React.useState(player.age);\r\n  const [email, setEmail] = React.useState(player.email);\r\n  // const [thumbnail, setThumbnail] = React.useState(player.thumbnail);\r\n\r\n  const gravatar = React.useMemo(\r\n    () => (email ? get_gravatar(email, 85) : null),\r\n    [email]\r\n  );\r\n\r\n  const valid = () => {\r\n    updatePlayerToStore(player.id, { name, bggName, age, email });\r\n    setEditMode(false);\r\n  };\r\n\r\n  // Check here\r\n  // https://www.w3schools.com/w3css/tryit.asp?filename=tryw3css_lists_avatar\r\n\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <Card raised>\r\n          <CardHeader\r\n            title={\r\n              player.bggName\r\n                ? player.bggName\r\n                : player.name\r\n                ? player.name\r\n                : \"no name\"\r\n            }\r\n            subheader={player.name ? player.name : \"\"}\r\n            avatar={<Avatar src={gravatar ? gravatar : player.thumbnail} />}\r\n            action={\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => deletePlayerFromStore(player.id)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            }\r\n          />\r\n          <CardContent>{player.age && <p>Age : {player.age}</p>}</CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={() => setEditMode(true)}>\r\n              Edit\r\n            </Button>\r\n            <Button size=\"small\" onClick={() => fetchPlayerGames(player)}>\r\n              Fetch\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      )}\r\n\r\n      {editMode && (\r\n        <>\r\n          <div className=\"w3-container w3-orange\">\r\n            <p>\r\n              <label>Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </p>\r\n\r\n            <p>\r\n              <label>BGG</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"bggName\"\r\n                value={bggName}\r\n                onChange={(e) => setBggName(e.target.value)}\r\n              />\r\n            </p>\r\n\r\n            <p>\r\n              <label>Email</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </p>\r\n\r\n            <p>\r\n              <label>Age</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"age\"\r\n                value={age}\r\n                onChange={(e) => setAge(e.target.value)}\r\n              />\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"w3-bar\">\r\n            <button className=\"w3-button w3-blue\" onClick={valid}>\r\n              Valid\r\n            </button>\r\n            <button\r\n              className=\"w3-button w3-light-grey\"\r\n              onClick={() => setEditMode(false)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nPlayer.propTypes = {\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updatePlayerToStore,\r\n  deletePlayerFromStore,\r\n  fetchPlayerGames,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Player);\r\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Players.js",["125"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport Player from \"./Player\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    player: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    players: {\r\n      \"&:last-child\": {\r\n        // Pas terrible ! mais ça marche\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Players = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.players}>\r\n      {props.players.map((player) => (\r\n        <div key={player.id} className={classes.player}>\r\n          <Player player={player} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    players: state.bgg.players,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Players);\r\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\index.js",["126","127"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\reducers\\index.js",["128"],"import produce from \"immer\";\r\n\r\nimport { ADD_PLAYER, DELETE_PLAYER, UPDATE_PLAYER, FETCH_PLAYER_GAMES, UPDATE_PARTY } from \"../action\";\r\n\r\nconst initialState = {\r\n  players: [\r\n    {\r\n      id: 1,\r\n      bggName: \"Bratac\",\r\n      email: \"bratac@free.fr\"\r\n    },\r\n    {\r\n      id: 2,\r\n      bggName: \"Wallice35\",\r\n      email: \"wallice35@free.fr\"\r\n    }\r\n  ],\r\n  ownership: [],\r\n  games: [],\r\n\r\n  party: {\r\n    nbPlayers: 2,\r\n    minAge: 8\r\n  }\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  // console.log(\"action.type=\", action.type);\r\n  // console.log(\"action.payload=\", action.payload);\r\n\r\n  switch (action.type) {\r\n    case ADD_PLAYER:\r\n      return produce(state, draft => {\r\n        draft.players.push(action.payload.player);\r\n      });\r\n\r\n    case DELETE_PLAYER:\r\n      return produce(state, draft => {\r\n        draft.players = draft.players.filter(x => x.id !== action.payload.playerId);\r\n      });\r\n\r\n    case UPDATE_PLAYER:\r\n      return produce(state, draft => {\r\n        draft.players = draft.players.map(x =>\r\n          x.id !== action.payload.playerId ? x : { ...x, ...action.payload.playerData }\r\n        );\r\n      });\r\n\r\n    case UPDATE_PARTY:\r\n      return produce(state, draft => {\r\n        draft.party = action.payload.party;\r\n      });\r\n\r\n    case FETCH_PLAYER_GAMES:\r\n      return produce(state, draft => {\r\n        draft.games = draft.games.concat(action.payload.games);\r\n\r\n        draft.ownership = draft.ownership\r\n          .filter(x => x.playerId !== action.payload.playerId)\r\n          .concat(action.payload.ownership);\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\App.js",["129","130","131"],"import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Container from \"@material-ui/core/Container\";\n\nimport Fab from \"@material-ui/core/Fab\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport OwnersIcon from \"@material-ui/icons/People\";\nimport GamesIcon from \"@material-ui/icons/Casino\";\nimport PartyIcon from \"@material-ui/icons/SupervisedUserCircle\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport Party from \"./components/Party\";\n// import BestGame from \"./components/BestGame\";\nimport PartySelection from \"./components/PartySelection\";\n\nimport Footer from \"./components/Footer\";\nimport PageGames from \"./components/PageGames\";\n\nimport ModalGame from \"./components/ModalGame\";\nimport Players from \"./components/Players\";\n\nimport { addPlayerToStore } from \"./action\";\n\nimport { ModalContext } from \"./contexts/modal-context.js\";\nimport { Page } from \"./constants/pages\";\n\nimport { name, version } from \"../package.json\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n\n    appBar: {\n      top: \"auto\",\n      bottom: 0,\n      \"& > div\": { alignItems: \"flex-start\" },\n    },\n    grow: {\n      flexGrow: 1,\n    },\n\n    canvasesContainer: {\n      position: \"absolute\",\n    },\n\n    fab: {\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n      top: \"auto\",\n      left: \"auto\",\n      position: \"fixed\",\n      zIndex: 1500,\n    },\n  })\n);\n\nconst App = ({ addPlayerToStore }) => {\n  const classes = useStyles();\n\n  const [modalGameId, setModalGameId] = useState(\"0\");\n  const [page, setPage] = useState(Page.Home);\n\n  const addPlayer = () => {\n    fetch(\"https://randomuser.me/api/\")\n      .then((results) => results.json())\n      .then((data) => {\n        let testNewPlayer = data.results[0];\n        console.log(\"addPlayer testNewPlayer\", testNewPlayer);\n\n        let newPlayer = {\n          id: testNewPlayer.login.uuid,\n          name: testNewPlayer.name.first,\n          bggName: \"\",\n          age: testNewPlayer.dob.age,\n          color: \"blue\",\n          fetched: false,\n          email: \"\",\n          thumbnail: testNewPlayer.picture.thumbnail,\n        };\n        addPlayerToStore(newPlayer);\n      });\n  };\n\n  return (\n    <ModalContext.Provider value={{ modalGameId, setModalGameId }}>\n      <ModalGame />\n\n      <>\n        <AppBar id={\"topBar\"} position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              {`${name} - ${version}`}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Container\n          maxWidth=\"sm\"\n          style={{\n            // backgroundColor: \"#aefefe\",\n            paddingBottom: \"64px\",\n          }}\n          disableGutters\n        >\n          {page === Page.Home && (\n            <Container style={{ backgroundColor: \"#dddddd\" }}>Home</Container>\n          )}\n\n          {page === Page.Owners && (\n            <Container>\n              <Fab\n                color=\"secondary\"\n                aria-label=\"add\"\n                onClick={addPlayer}\n                className={classes.fab}\n              >\n                <AddIcon />\n              </Fab>\n\n              <Players />\n            </Container>\n          )}\n\n          {page === Page.Games && <PageGames />}\n\n          {page === Page.Party && (\n            <>\n              <Party />\n              {/* <BestGame /> */}\n              <PartySelection />\n            </>\n          )}\n        </Container>\n\n        <AppBar\n          id={\"bottomBar\"}\n          position=\"fixed\"\n          color=\"primary\"\n          className={classes.appBar}\n        >\n          <Toolbar>\n            <div className={classes.grow} />\n            <IconButton color=\"inherit\" onClick={() => setPage(Page.Home)}>\n              <HomeIcon />\n            </IconButton>\n            <IconButton color=\"inherit\" onClick={() => setPage(Page.Owners)}>\n              <OwnersIcon />\n            </IconButton>\n            <IconButton color=\"inherit\" onClick={() => setPage(Page.Games)}>\n              <GamesIcon />\n            </IconButton>\n            <IconButton color=\"inherit\" onClick={() => setPage(Page.Party)}>\n              <PartyIcon />\n            </IconButton>\n            <div className={classes.grow} />\n          </Toolbar>\n        </AppBar>\n      </>\n    </ModalContext.Provider>\n  );\n};\n\n// class AppBak extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.setModalGame = (id) => {\n//       console.log(\"App.setModalGame:\", id);\n//       this.setState({\n//         ...this.state,\n//         modalGameId: id,\n//       });\n//     };\n\n//     this.state = {\n//       modalGameId: \"0\",\n//       setModalGame: this.setModalGame,\n//       page: Page.Home,\n//     };\n//   }\n\n//   addPlayer = () => {\n//     fetch(\"https://randomuser.me/api/\")\n//       .then((results) => results.json())\n//       .then((data) => {\n//         let testNewPlayer = data.results[0];\n//         // console.log(\"addPlayer testNewPlayer\", JSON.stringify(testNewPlayer, null, 2));\n\n//         let newPlayer = {\n//           id: testNewPlayer.login.uuid,\n//           name: testNewPlayer.name.first,\n//           bggName: \"\",\n//           age: testNewPlayer.dob.age,\n//           color: \"blue\",\n//           fetched: false,\n//           email: \"\",\n//           thumbnail: testNewPlayer.picture.thumbnail,\n//         };\n//         this.props.addPlayerToStore(newPlayer);\n//       });\n//   };\n\n//   handlePageChange = (event, page) => {\n//     if (this.state.page !== page) {\n//       this.setState({\n//         page: page,\n//       });\n//     }\n//   };\n\n//   render() {\n//     const { page } = this.state;\n\n//     return (\n//       <ModalContext.Provider value={this.state}>\n//         <ModalGame />\n\n//         <>\n//           <AppBar id={\"topBar\"} position=\"static\">\n//             <Toolbar>\n//               <Typography variant=\"h6\" className={classes.title}>\n//                 {`${name} - ${version}`}\n//               </Typography>\n//             </Toolbar>\n//           </AppBar>\n//         </>\n\n//         <div className=\"bgg-app\">\n//           <header className=\"w3-container w3-theme-d5 bgg-header\">\n//             {name} - {version}\n//           </header>\n\n//           <div className=\"w3-row bgg-body\">\n//             {page === Page.Home && (\n//               <div className=\"w3-col l8 w3-container \">Home</div>\n//             )}\n\n//             {page === Page.Owners && (\n//               <div className=\"w3-col l8 w3-container \">\n//                 <button\n//                   className=\"w3-button w3-block w3-ripple w3-teal w3-round-xxlarge w3-xlarge w3-margin-top w3-margin-bottom\"\n//                   onClick={this.addPlayer}\n//                 >\n//                   <span>Add owner</span>\n//                 </button>\n\n//                 <Players />\n//               </div>\n//             )}\n\n//             {page === Page.Games && (\n//               <>\n//                 <div className=\"w3-col l8\">\n//                   <span>TODO if more than one owner add a filter</span>\n//                 </div>\n//                 <div className=\"w3-col l8\">\n//                   <span>tab for owned and wished games</span>\n//                 </div>\n\n//                 <div className=\"w3-col l8\">\n//                   <Games />\n//                 </div>\n\n//                 <div className=\"w3-col l8\">\n//                   <WishedGames />\n//                 </div>\n//               </>\n//             )}\n\n//             {page === Page.Party && (\n//               <div className=\"w3-col l8\">\n//                 <Party />\n//                 {/* <BestGame /> */}\n//                 <PartySelection />\n//               </div>\n//             )}\n//           </div>\n\n//           <Footer page={this.state.page} onClick={this.handlePageChange} />\n//         </div>\n//       </ModalContext.Provider>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state, ownProps) => {\n//   return {\n//     dataVersion: state.dataVersion\n//   };\n// };\n\nconst mapDispatchToProps = {\n  addPlayerToStore,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\WishedGames.js",[],["132","133"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GameRow.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Party.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\PageGames.js",["134","135","136"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\FilteredGames.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\TableGamesFromIds.js",["137"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\TableRowGameFromId.js",["138","139","140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"141","replacedBy":"145"},{"ruleId":"143","replacedBy":"146"},{"ruleId":"141","replacedBy":"147"},{"ruleId":"143","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":9,"column":36,"nodeType":"151","messageId":"152","endLine":9,"endColumn":41},{"ruleId":"141","replacedBy":"153"},{"ruleId":"143","replacedBy":"154"},{"ruleId":"149","severity":1,"message":"155","line":5,"column":7,"nodeType":"151","messageId":"152","endLine":5,"endColumn":18},{"ruleId":"149","severity":1,"message":"156","line":113,"column":13,"nodeType":"151","messageId":"152","endLine":113,"endColumn":25},{"ruleId":"149","severity":1,"message":"157","line":17,"column":8,"nodeType":"151","messageId":"152","endLine":17,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":4,"column":36,"nodeType":"151","messageId":"152","endLine":4,"endColumn":41},{"ruleId":"149","severity":1,"message":"158","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":14},{"ruleId":"149","severity":1,"message":"159","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":27,"column":1,"nodeType":"162","endLine":66,"endColumn":3},{"ruleId":"149","severity":1,"message":"163","line":4,"column":20,"nodeType":"151","messageId":"152","endLine":4,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":5,"column":36,"nodeType":"151","messageId":"152","endLine":5,"endColumn":41},{"ruleId":"149","severity":1,"message":"164","line":27,"column":8,"nodeType":"151","messageId":"152","endLine":27,"endColumn":14},{"ruleId":"141","replacedBy":"153"},{"ruleId":"143","replacedBy":"154"},{"ruleId":"149","severity":1,"message":"150","line":4,"column":36,"nodeType":"151","messageId":"152","endLine":4,"endColumn":41},{"ruleId":"149","severity":1,"message":"165","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":19},{"ruleId":"149","severity":1,"message":"166","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":3,"column":36,"nodeType":"151","messageId":"152","endLine":3,"endColumn":41},{"ruleId":"149","severity":1,"message":"167","line":23,"column":5,"nodeType":"151","messageId":"152","endLine":23,"endColumn":20},{"ruleId":"149","severity":1,"message":"168","line":37,"column":5,"nodeType":"151","messageId":"152","endLine":37,"endColumn":13},{"ruleId":"149","severity":1,"message":"169","line":37,"column":16,"nodeType":"151","messageId":"152","endLine":37,"endColumn":24},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],["170"],["171"],["170"],["171"],"no-unused-vars","'Theme' is defined but never used.","Identifier","unusedVar",["170"],["171"],"'axiosConfig' is assigned a value but never used.","'nextResponse' is assigned a value but never used.","'Typography' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'Footer' is defined but never used.","'WishedGames' is defined but never used.","'Games' is defined but never used.","'backgroundColor' is assigned a value but never used.","'minClass' is assigned a value but never used.","'maxClass' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]