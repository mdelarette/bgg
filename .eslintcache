[{"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\TableRowGameFromId.js":"1","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\TableGamesFromIds.js":"2","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GameInModal.js":"3","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\index.js":"4","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\store\\configure.js":"5","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\PartySelection.js":"6","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\ModalGame.js":"7","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\reducers\\index.js":"8","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Games.js":"9","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Player.js":"10","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\utils\\Gravatar.js":"11","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\FilteredGames.js":"12","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\contexts\\modal-context.js":"13","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Footer.js":"14","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\action\\index.js":"15","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\selectors\\index.js":"16","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\serviceWorker.js":"17","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GamesFromIds.js":"18","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GameRow.js":"19","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Party.js":"20","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\PageGames.js":"21","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\App.js":"22","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Players.js":"23","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Home.js":"24","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\constants\\pages.ts":"25"},{"size":3221,"mtime":1608112751875,"results":"26","hashOfConfig":"27"},{"size":1878,"mtime":1608110304286,"results":"28","hashOfConfig":"27"},{"size":4298,"mtime":1608625350466,"results":"29","hashOfConfig":"27"},{"size":1560,"mtime":1608047026996,"results":"30","hashOfConfig":"27"},{"size":885,"mtime":1554820531033,"results":"31","hashOfConfig":"27"},{"size":571,"mtime":1608559045115,"results":"32","hashOfConfig":"27"},{"size":519,"mtime":1608042284261,"results":"33","hashOfConfig":"27"},{"size":1952,"mtime":1608558513363,"results":"34","hashOfConfig":"27"},{"size":405,"mtime":1573637218842,"results":"35","hashOfConfig":"27"},{"size":5774,"mtime":1608562938481,"results":"36","hashOfConfig":"27"},{"size":6950,"mtime":1570802103405,"results":"37","hashOfConfig":"27"},{"size":518,"mtime":1608113074459,"results":"38","hashOfConfig":"27"},{"size":200,"mtime":1607954802751,"results":"39","hashOfConfig":"27"},{"size":1162,"mtime":1573637145464,"results":"40","hashOfConfig":"27"},{"size":5910,"mtime":1608558207898,"results":"41","hashOfConfig":"27"},{"size":6448,"mtime":1608624544527,"results":"42","hashOfConfig":"27"},{"size":4951,"mtime":499162500000,"results":"43","hashOfConfig":"27"},{"size":1215,"mtime":1573653902655,"results":"44","hashOfConfig":"27"},{"size":5741,"mtime":1607954891081,"results":"45","hashOfConfig":"27"},{"size":2092,"mtime":1608557596711,"results":"46","hashOfConfig":"27"},{"size":4052,"mtime":1608562512225,"results":"47","hashOfConfig":"27"},{"size":8890,"mtime":1608563275100,"results":"48","hashOfConfig":"27"},{"size":920,"mtime":1607964760869,"results":"49","hashOfConfig":"27"},{"size":785,"mtime":1608563477617,"results":"50","hashOfConfig":"27"},{"size":130,"mtime":1573638511166,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"78ydfa",{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\TableRowGameFromId.js",["115","116","117","118"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getGameRowData } from \"../selectors\";\r\nimport { getNbPlayers } from \"../selectors\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { ModalContext } from \"../contexts/modal-context.js\";\r\n\r\nTableRowGameFromId.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    avatarCell: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    gameName: {\r\n      paddingLeft: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nfunction TableRowGameFromId({ id, game, odd, nbPlayers }) {\r\n  const classes = useStyles();\r\n\r\n  if (!game) {\r\n    return null;\r\n  }\r\n\r\n  let backgroundColor = \"bgg-even\";\r\n  if (odd) {\r\n    backgroundColor = \"bgg-odd\";\r\n  }\r\n\r\n  let min = parseInt(game.min);\r\n  let max = parseInt(game.max);\r\n\r\n  let minClass = \"w3-blue\";\r\n  let maxClass = \"w3-blue\";\r\n\r\n  if (nbPlayers === min && nbPlayers === max) {\r\n    minClass = maxClass = \"w3-green\";\r\n  }\r\n\r\n  if (nbPlayers < min || nbPlayers > max) {\r\n    minClass = maxClass = \"w3-red\";\r\n  }\r\n\r\n  return (\r\n    <ModalContext.Consumer>\r\n      {({ modalGameId, setModalGameId }) => (\r\n        <React.Fragment>\r\n          <TableRow key={id}>\r\n            <TableCell\r\n              component=\"th\"\r\n              scope=\"row\"\r\n              className={classes.avatarCell}\r\n            >\r\n              <Avatar\r\n                src={game.thumbnail}\r\n                variant=\"rounded\"\r\n                onClick={() => {\r\n                  setModalGameId(id);\r\n                }}\r\n              />\r\n\r\n              {game.extensions && game.extensions.length > 0 && (\r\n                <AvatarGroup>\r\n                  {game.extensions.map((extension, index) => {\r\n                    var elem = (\r\n                      <Avatar\r\n                        alt={extension.name}\r\n                        src={extension.thumbnail}\r\n                        onClick={() => {\r\n                          setModalGameId(extension.id);\r\n                        }}\r\n                      />\r\n                    );\r\n                    return elem;\r\n                  })}\r\n                </AvatarGroup>\r\n              )}\r\n\r\n              <Typography variant=\"h6\" className={classes.gameName}>\r\n                {game.name}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell align=\"right\">{game.minAge}</TableCell>\r\n            <TableCell align=\"right\">{game.min}</TableCell>\r\n            <TableCell align=\"right\">{game.max}</TableCell>\r\n          </TableRow>\r\n        </React.Fragment>\r\n      )}\r\n    </ModalContext.Consumer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    game: getGameRowData(state, ownProps),\r\n    nbPlayers: getNbPlayers(state, ownProps),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableRowGameFromId);\r\n",["119","120"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\TableGamesFromIds.js",["121"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GameInModal.js",["122","123"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\index.js",["124","125"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport purple from \"@material-ui/core/colors/purple\";\nimport green from \"@material-ui/core/colors/green\";\n\nimport { frFR } from \"@material-ui/core/locale\";\n\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./App\";\nimport { store, persistor } from \"./store/configure\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// https://hookagency.com/website-color-schemes\n// 6. Greenery + Gradients Website Color Scheme 2021 by Anna Senkova\n// Dark Green: #164A41\n\n// Medium Green: #4D774E\n\n// Light Green: #9DC88D\n\n// Natural Yellow: #F1B24A\n\n// White: #FFFFFF\n\nconst theme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        main: \"#4D774E\",\n        dark: \"#164A41\",\n        light: \"#9DC88D\",\n      },\n      secondary: {\n        main: \"#F1B24A\",\n      },\n    },\n  },\n  frFR\n);\n\n// https://www.pantone.com/articles/color-of-the-year/color-of-the-year-2020\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\store\\configure.js",[],["126","127"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\PartySelection.js",["128"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPartySelectionGameIds } from \"../selectors\";\r\n\r\nimport GamesFromIds from \"../components/GamesFromIds\";\r\nimport TableGamesFromIds from \"../components/TableGamesFromIds\";\r\n\r\nfunction PartySelection({ gameIds }) {\r\n  // return <GamesFromIds gameIds={gameIds} />;\r\n  return <TableGamesFromIds gameIds={gameIds} />;\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { gameIds: getPartySelectionGameIds(state) };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(PartySelection);\r\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\ModalGame.js",[],["129","130"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\reducers\\index.js",["131"],"import produce from \"immer\";\r\n\r\nimport {\r\n  ADD_PLAYER,\r\n  DELETE_PLAYER,\r\n  UPDATE_PLAYER,\r\n  FETCH_PLAYER_GAMES,\r\n  UPDATE_PARTY,\r\n  UPDATE_GAMES_FILTER,\r\n} from \"../action\";\r\n\r\nconst initialState = {\r\n  players: [\r\n    {\r\n      id: 1,\r\n      bggName: \"Bratac\",\r\n      email: \"bratac@free.fr\",\r\n    },\r\n    {\r\n      id: 2,\r\n      bggName: \"Wallice35\",\r\n      email: \"wallice35@free.fr\",\r\n    },\r\n  ],\r\n  ownership: [],\r\n  games: [],\r\n\r\n  party: {\r\n    nbPlayers: 2,\r\n    minAge: 8,\r\n  },\r\n\r\n  gamesFilter: {\r\n    selectedPlayerId: \"0\",\r\n    filterStatus: \"-1\",\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  // console.log(\"action.type=\", action.type);\r\n  // console.log(\"action.payload=\", action.payload);\r\n\r\n  switch (action.type) {\r\n    case ADD_PLAYER:\r\n      return produce(state, (draft) => {\r\n        draft.players.push(action.payload.player);\r\n      });\r\n\r\n    case DELETE_PLAYER:\r\n      return produce(state, (draft) => {\r\n        draft.players = draft.players.filter(\r\n          (x) => x.id !== action.payload.playerId\r\n        );\r\n      });\r\n\r\n    case UPDATE_PLAYER:\r\n      return produce(state, (draft) => {\r\n        draft.players = draft.players.map((x) =>\r\n          x.id !== action.payload.playerId\r\n            ? x\r\n            : { ...x, ...action.payload.playerData }\r\n        );\r\n      });\r\n\r\n    case UPDATE_PARTY:\r\n      return produce(state, (draft) => {\r\n        draft.party = action.payload.party;\r\n      });\r\n\r\n    case UPDATE_GAMES_FILTER:\r\n      return produce(state, (draft) => {\r\n        draft.gamesFilter = action.payload.gamesFilter;\r\n      });\r\n\r\n    case FETCH_PLAYER_GAMES:\r\n      return produce(state, (draft) => {\r\n        draft.games = draft.games.concat(action.payload.games);\r\n\r\n        draft.ownership = draft.ownership\r\n          .filter((x) => x.playerId !== action.payload.playerId)\r\n          .concat(action.payload.ownership);\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Games.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Player.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\utils\\Gravatar.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\FilteredGames.js",["132"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFilteredGameIds } from \"../selectors\";\r\n\r\nimport TableGamesFromIds from \"../components/TableGamesFromIds\";\r\nimport GamesFromIds from \"../components/GamesFromIds\";\r\n\r\nfunction FilteredGames({ gameIds }) {\r\n  return <TableGamesFromIds gameIds={gameIds} />;\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { gameIds: getFilteredGameIds(state, ownProps) };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(FilteredGames);\r\n",["133","134"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\contexts\\modal-context.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Footer.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\action\\index.js",["135","136"],"import { parseString } from \"xml2js\";\r\nimport axios from \"axios\";\r\nimport he from \"he\";\r\n\r\nconst axiosConfig = {\r\n  headers: { \"Access-Control-Allow-Origin\": true },\r\n};\r\n\r\nexport const UPDATE_PARTY = \"UPDATE_PARTY\";\r\nexport const updatePartyToStore = (party) => {\r\n  console.log(\"updatePartyToStore !!!\");\r\n  return {\r\n    type: UPDATE_PARTY,\r\n    payload: {\r\n      party,\r\n    },\r\n  };\r\n};\r\n\r\nexport const UPDATE_GAMES_FILTER = \"UPDATE_GAMES_FILTER\";\r\nexport const updateGamesFilterToStore = (gamesFilter) => {\r\n  console.log(\"updateGamesFilterToStore !!!\");\r\n  return {\r\n    type: UPDATE_GAMES_FILTER,\r\n    payload: {\r\n      gamesFilter,\r\n    },\r\n  };\r\n};\r\n\r\nexport const ADD_PLAYER = \"ADD_PLAYER\";\r\nexport const addPlayerToStore = (player) => {\r\n  return {\r\n    type: ADD_PLAYER,\r\n    payload: {\r\n      player,\r\n    },\r\n  };\r\n};\r\n\r\nexport const DELETE_PLAYER = \"DELETE_PLAYER\";\r\nexport const deletePlayerFromStore = (playerId) => {\r\n  return {\r\n    type: DELETE_PLAYER,\r\n    payload: {\r\n      playerId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const UPDATE_PLAYER = \"UPDATE_PLAYER\";\r\nexport const updatePlayerToStore = (playerId, playerData) => {\r\n  console.log(\r\n    \"updatePlayerToStore\",\r\n    playerId,\r\n    JSON.stringify(playerData, null, 2)\r\n  );\r\n  return {\r\n    type: UPDATE_PLAYER,\r\n    payload: {\r\n      playerId,\r\n      playerData,\r\n    },\r\n  };\r\n};\r\n\r\n// https://boardgamegeek.com/wiki/page/BGG_XML_API2\r\n\r\nexport const FETCH_PLAYER_GAMES = \"FETCH_PLAYER_GAMES\";\r\n\r\nconst setPlayerGames = (playerId, ownership, games) => ({\r\n  type: \"FETCH_PLAYER_GAMES\",\r\n  payload: { playerId, ownership, games },\r\n});\r\n\r\nconst gamesFromResponse = (response, playerId) => {\r\n  var games = [];\r\n\r\n  parseString(response.data, function (err, _games) {\r\n    games = _games.items.item.map((x, index) => {\r\n      // console.log(`_games.items.item[${index}]=`, x);\r\n\r\n      let game = {\r\n        gameId: x.$.objectid,\r\n        playerId: playerId,\r\n        // name: x.name[0]._,\r\n        status: x.status[0].$,\r\n      };\r\n\r\n      //console.log(`games[${index}]=`, JSON.stringify(game, null, 2));\r\n\r\n      return game;\r\n    });\r\n  });\r\n\r\n  return games;\r\n};\r\n\r\nexport const fetchPlayerGames = (player) => async (dispatch, getState) => {\r\n  // Appel à l'api\r\n  console.log(\"fetchPlayerGames\", player.id, player.bggName);\r\n\r\n  var games = [];\r\n  var ownership = [];\r\n\r\n  // TODO check how we can get rid of \"Access-Control-Allow-Origin\" at https://www.html5rocks.com/en/tutorials/cors/\r\n\r\n  // TODO treat : answer 202\r\n  // <?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\r\n  //  <message>\r\n  //   Your request for this collection has been accepted and will be processed.  Please try again later for access.\r\n  //  </message>\r\n\r\n  await axios(\r\n    `https://www.boardgamegeek.com/xmlapi2/collection?username=${player.bggName}`\r\n  )\r\n    .then(async function (response) {\r\n      if (response.code === 202) {\r\n        console.log(\"we should retry\");\r\n      } else {\r\n        games = gamesFromResponse(response, player.id);\r\n      }\r\n\r\n      const nextResponse = await axios.get(\r\n        `https://www.boardgamegeek.com/xmlapi2/collection?username=${player.bggName}`\r\n      );\r\n      ownership = games.filter(uniqueId);\r\n\r\n      // Remove games already known to limit the fetch !\r\n\r\n      var existingIds = getState().bgg.games.map((game) => game.id);\r\n\r\n      var idsArray = ownership.map((o) => o.gameId);\r\n      idsArray = idsArray.filter(\r\n        (id) => existingIds.find((x) => x === id) === undefined\r\n      );\r\n\r\n      if (idsArray.length > 0) {\r\n        var idsQueryString = idsArray.reduce((acc, id) => acc + `${id},`, \"\");\r\n        idsQueryString = idsQueryString.slice(0, idsQueryString.length - 1);\r\n\r\n        const responseGame = await axios.get(\r\n          `https://www.boardgamegeek.com/xmlapi2/thing?id=${idsQueryString}`\r\n        );\r\n        parseString(responseGame.data, function (err, _games) {\r\n          //   console.log(\"_games=\", _games);\r\n          // console.log(\"_games.items=\", _games.items);\r\n\r\n          // TODO check x.$.type === 'boardgameexpansion'\r\n\r\n          games = _games.items.item.map((x, index) => {\r\n            // if (index === 0) {\r\n            // console.log(`_games.items.item[${index}]=`, x);\r\n            // }\r\n\r\n            // if (x.$.id === \"822\") {\r\n            // console.log(`_games.items.item[${index}]=`, x);\r\n            // }\r\n\r\n            let game = {\r\n              id: x.$.id,\r\n              type: x.$.type,\r\n              name: x.name[0].$.value,\r\n              minage: x.minage[0].$.value,\r\n              min: x.minplayers[0].$.value,\r\n              max: x.maxplayers[0].$.value,\r\n              minplaytime: x.minplaytime[0].$.value,\r\n              maxplaytime: x.maxplaytime[0].$.value,\r\n              playingtime: x.playingtime[0].$.value,\r\n              image: x.image[0],\r\n              thumbnail: x.thumbnail[0], // FIT IN 200x150\r\n              description: he.decode(x.description[0]),\r\n            };\r\n\r\n            if (game.type === \"boardgameexpansion\") {\r\n              game.extends = x.link.reduce((accumulator, currentValue) => {\r\n                if (currentValue.$.type === \"boardgameexpansion\") {\r\n                  accumulator.push(currentValue.$.id);\r\n                }\r\n                return accumulator;\r\n              }, []);\r\n            }\r\n\r\n            // console.log(`games[${index}]=`, JSON.stringify(game, null, 2));\r\n\r\n            return game;\r\n          });\r\n          return;\r\n        });\r\n      }\r\n\r\n      dispatch(setPlayerGames(player.id, ownership, games));\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    })\r\n    .then(function () {\r\n      // always executed\r\n      // setLoading(false);\r\n    });\r\n};\r\n\r\nfunction uniqueId(value, index, self) {\r\n  return (\r\n    self\r\n      .slice(index + 1)\r\n      .findIndex(\r\n        (currentValue, i, r) => currentValue.gameId === value.gameId\r\n      ) === -1\r\n  );\r\n}\r\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\selectors\\index.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\serviceWorker.js",[],["137","138"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GamesFromIds.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\GameRow.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Party.js",["139"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { updatePartyToStore } from \"../action\";\r\n\r\nimport { TextField, MenuItem, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    form: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n      padding: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nconst Party = ({ party, updatePartyToStore }) => {\r\n  const classes = useStyles();\r\n\r\n  const [nbPlayers, setNbPlayers] = React.useState(party.nbPlayers);\r\n  const [minAge, setMinAge] = React.useState(party.minAge);\r\n\r\n  const firstUpdate = React.useRef(true);\r\n\r\n  React.useEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    } else {\r\n      updatePartyToStore({ nbPlayers: nbPlayers, minAge: minAge });\r\n      return;\r\n    }\r\n  }, [nbPlayers, minAge, updatePartyToStore]);\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={3} className={classes.form}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Number of players\"\r\n          value={nbPlayers}\r\n          onChange={(e) => setNbPlayers(e.target.value)}\r\n          helperText=\"\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          color=\"secondary\"\r\n          className={classes.formControl}\r\n        />\r\n\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Age of youngest player\"\r\n          value={minAge}\r\n          onChange={(e) => setMinAge(e.target.value)}\r\n          helperText=\"\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          color=\"secondary\"\r\n          className={classes.formControl}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    party: state.bgg.party,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updatePartyToStore,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Party);\r\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\PageGames.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\App.js",["140","141","142"],"import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Container from \"@material-ui/core/Container\";\n\nimport Fab from \"@material-ui/core/Fab\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport OwnersIcon from \"@material-ui/icons/People\";\nimport GamesIcon from \"@material-ui/icons/Casino\";\nimport PartyIcon from \"@material-ui/icons/SupervisedUserCircle\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport Home from \"./components/Home\";\nimport Party from \"./components/Party\";\n// import BestGame from \"./components/BestGame\";\nimport PartySelection from \"./components/PartySelection\";\n\nimport Footer from \"./components/Footer\";\nimport PageGames from \"./components/PageGames\";\n\nimport ModalGame from \"./components/ModalGame\";\nimport Players from \"./components/Players\";\n\nimport { addPlayerToStore } from \"./action\";\n\nimport { ModalContext } from \"./contexts/modal-context.js\";\nimport { Page } from \"./constants/pages\";\n\nimport { name, version } from \"../package.json\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n\n    appBar: {\n      top: \"auto\",\n      bottom: 0,\n      \"& > div\": { alignItems: \"flex-start\" },\n    },\n    grow: {\n      flexGrow: 1,\n    },\n\n    canvasesContainer: {\n      position: \"absolute\",\n    },\n\n    fab: {\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n      top: \"auto\",\n      left: \"auto\",\n      position: \"fixed\",\n      zIndex: 1500,\n    },\n  })\n);\n\nconst App = ({ addPlayerToStore }) => {\n  const classes = useStyles();\n\n  const [modalGameId, setModalGameId] = useState(\"0\");\n  const [page, setPage] = useState(Page.Home);\n\n  const addPlayer = () => {\n    fetch(\"https://randomuser.me/api/\")\n      .then((results) => results.json())\n      .then((data) => {\n        let testNewPlayer = data.results[0];\n        console.log(\"addPlayer testNewPlayer\", testNewPlayer);\n\n        let newPlayer = {\n          id: testNewPlayer.login.uuid,\n          name: testNewPlayer.name.first,\n          bggName: \"\",\n          age: testNewPlayer.dob.age,\n          color: \"blue\",\n          fetched: false,\n          email: \"\",\n          thumbnail: testNewPlayer.picture.thumbnail,\n        };\n        addPlayerToStore(newPlayer);\n      });\n  };\n\n  return (\n    <ModalContext.Provider value={{ modalGameId, setModalGameId }}>\n      <ModalGame />\n\n      <>\n        <AppBar id={\"topBar\"} position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              {`${name} - ${version}`}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Container\n          maxWidth=\"sm\"\n          style={{\n            // backgroundColor: \"#aefefe\",\n            paddingBottom: \"64px\",\n          }}\n          disableGutters\n        >\n          {page === Page.Home && (\n            <div style={{ paddingTop: \"8px\" }}>\n              <Home />\n            </div>\n          )}\n\n          {page === Page.Owners && (\n            <Container>\n              <Fab\n                color=\"secondary\"\n                aria-label=\"add\"\n                onClick={addPlayer}\n                className={classes.fab}\n              >\n                <AddIcon />\n              </Fab>\n\n              <Players />\n            </Container>\n          )}\n\n          {page === Page.Games && <PageGames />}\n\n          {page === Page.Party && (\n            <>\n              <Party />\n              {/* <BestGame /> */}\n              <PartySelection />\n            </>\n          )}\n        </Container>\n\n        <AppBar\n          id={\"bottomBar\"}\n          position=\"fixed\"\n          color=\"primary\"\n          className={classes.appBar}\n        >\n          <Toolbar>\n            <div className={classes.grow} />\n            <IconButton\n              color={page === Page.Home ? \"secondary\" : \"inherit\"}\n              onClick={() => setPage(Page.Home)}\n            >\n              <HomeIcon />\n            </IconButton>\n            <IconButton\n              color={page === Page.Owners ? \"secondary\" : \"inherit\"}\n              onClick={() => setPage(Page.Owners)}\n            >\n              <OwnersIcon />\n            </IconButton>\n            <IconButton\n              color={page === Page.Games ? \"secondary\" : \"inherit\"}\n              onClick={() => setPage(Page.Games)}\n            >\n              <GamesIcon />\n            </IconButton>\n            <IconButton\n              color={page === Page.Party ? \"secondary\" : \"inherit\"}\n              onClick={() => setPage(Page.Party)}\n            >\n              <PartyIcon />\n            </IconButton>\n            <div className={classes.grow} />\n          </Toolbar>\n        </AppBar>\n      </>\n    </ModalContext.Provider>\n  );\n};\n\n// class AppBak extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.setModalGame = (id) => {\n//       console.log(\"App.setModalGame:\", id);\n//       this.setState({\n//         ...this.state,\n//         modalGameId: id,\n//       });\n//     };\n\n//     this.state = {\n//       modalGameId: \"0\",\n//       setModalGame: this.setModalGame,\n//       page: Page.Home,\n//     };\n//   }\n\n//   addPlayer = () => {\n//     fetch(\"https://randomuser.me/api/\")\n//       .then((results) => results.json())\n//       .then((data) => {\n//         let testNewPlayer = data.results[0];\n//         // console.log(\"addPlayer testNewPlayer\", JSON.stringify(testNewPlayer, null, 2));\n\n//         let newPlayer = {\n//           id: testNewPlayer.login.uuid,\n//           name: testNewPlayer.name.first,\n//           bggName: \"\",\n//           age: testNewPlayer.dob.age,\n//           color: \"blue\",\n//           fetched: false,\n//           email: \"\",\n//           thumbnail: testNewPlayer.picture.thumbnail,\n//         };\n//         this.props.addPlayerToStore(newPlayer);\n//       });\n//   };\n\n//   handlePageChange = (event, page) => {\n//     if (this.state.page !== page) {\n//       this.setState({\n//         page: page,\n//       });\n//     }\n//   };\n\n//   render() {\n//     const { page } = this.state;\n\n//     return (\n//       <ModalContext.Provider value={this.state}>\n//         <ModalGame />\n\n//         <>\n//           <AppBar id={\"topBar\"} position=\"static\">\n//             <Toolbar>\n//               <Typography variant=\"h6\" className={classes.title}>\n//                 {`${name} - ${version}`}\n//               </Typography>\n//             </Toolbar>\n//           </AppBar>\n//         </>\n\n//         <div className=\"bgg-app\">\n//           <header className=\"w3-container w3-theme-d5 bgg-header\">\n//             {name} - {version}\n//           </header>\n\n//           <div className=\"w3-row bgg-body\">\n//             {page === Page.Home && (\n//               <div className=\"w3-col l8 w3-container \">Home</div>\n//             )}\n\n//             {page === Page.Owners && (\n//               <div className=\"w3-col l8 w3-container \">\n//                 <button\n//                   className=\"w3-button w3-block w3-ripple w3-teal w3-round-xxlarge w3-xlarge w3-margin-top w3-margin-bottom\"\n//                   onClick={this.addPlayer}\n//                 >\n//                   <span>Add owner</span>\n//                 </button>\n\n//                 <Players />\n//               </div>\n//             )}\n\n//             {page === Page.Games && (\n//               <>\n//                 <div className=\"w3-col l8\">\n//                   <span>TODO if more than one owner add a filter</span>\n//                 </div>\n//                 <div className=\"w3-col l8\">\n//                   <span>tab for owned and wished games</span>\n//                 </div>\n\n//                 <div className=\"w3-col l8\">\n//                   <Games />\n//                 </div>\n\n//                 <div className=\"w3-col l8\">\n//                   <WishedGames />\n//                 </div>\n//               </>\n//             )}\n\n//             {page === Page.Party && (\n//               <div className=\"w3-col l8\">\n//                 <Party />\n//                 {/* <BestGame /> */}\n//                 <PartySelection />\n//               </div>\n//             )}\n//           </div>\n\n//           <Footer page={this.state.page} onClick={this.handlePageChange} />\n//         </div>\n//       </ModalContext.Provider>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state, ownProps) => {\n//   return {\n//     dataVersion: state.dataVersion\n//   };\n// };\n\nconst mapDispatchToProps = {\n  addPlayerToStore,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Players.js",["143"],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\components\\Home.js",[],"C:\\Users\\mdelarette\\Documents\\VSCode\\bgg\\src\\constants\\pages.ts",[],{"ruleId":"144","severity":1,"message":"145","line":7,"column":36,"nodeType":"146","messageId":"147","endLine":7,"endColumn":41},{"ruleId":"144","severity":1,"message":"148","line":42,"column":5,"nodeType":"146","messageId":"147","endLine":42,"endColumn":20},{"ruleId":"144","severity":1,"message":"149","line":56,"column":5,"nodeType":"146","messageId":"147","endLine":56,"endColumn":13},{"ruleId":"144","severity":1,"message":"150","line":56,"column":16,"nodeType":"146","messageId":"147","endLine":56,"endColumn":24},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"144","severity":1,"message":"145","line":3,"column":36,"nodeType":"146","messageId":"147","endLine":3,"endColumn":41},{"ruleId":"144","severity":1,"message":"145","line":9,"column":36,"nodeType":"146","messageId":"147","endLine":9,"endColumn":41},{"ruleId":"144","severity":1,"message":"155","line":16,"column":8,"nodeType":"146","messageId":"147","endLine":16,"endColumn":17},{"ruleId":"144","severity":1,"message":"156","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":14},{"ruleId":"144","severity":1,"message":"157","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":13},{"ruleId":"151","replacedBy":"158"},{"ruleId":"153","replacedBy":"159"},{"ruleId":"144","severity":1,"message":"160","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":20},{"ruleId":"151","replacedBy":"161"},{"ruleId":"153","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":39,"column":1,"nodeType":"165","endLine":87,"endColumn":3},{"ruleId":"144","severity":1,"message":"160","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":20},{"ruleId":"151","replacedBy":"166"},{"ruleId":"153","replacedBy":"167"},{"ruleId":"144","severity":1,"message":"168","line":5,"column":7,"nodeType":"146","messageId":"147","endLine":5,"endColumn":18},{"ruleId":"144","severity":1,"message":"169","line":124,"column":13,"nodeType":"146","messageId":"147","endLine":124,"endColumn":25},{"ruleId":"151","replacedBy":"170"},{"ruleId":"153","replacedBy":"171"},{"ruleId":"144","severity":1,"message":"172","line":8,"column":21,"nodeType":"146","messageId":"147","endLine":8,"endColumn":29},{"ruleId":"144","severity":1,"message":"173","line":4,"column":20,"nodeType":"146","messageId":"147","endLine":4,"endColumn":29},{"ruleId":"144","severity":1,"message":"145","line":5,"column":36,"nodeType":"146","messageId":"147","endLine":5,"endColumn":41},{"ruleId":"144","severity":1,"message":"174","line":28,"column":8,"nodeType":"146","messageId":"147","endLine":28,"endColumn":14},{"ruleId":"144","severity":1,"message":"145","line":4,"column":36,"nodeType":"146","messageId":"147","endLine":4,"endColumn":41},"no-unused-vars","'Theme' is defined but never used.","Identifier","unusedVar","'backgroundColor' is assigned a value but never used.","'minClass' is assigned a value but never used.","'maxClass' is assigned a value but never used.","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"'CardMedia' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.",["175"],["176"],"'GamesFromIds' is defined but never used.",["175"],["176"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["175"],["176"],"'axiosConfig' is assigned a value but never used.","'nextResponse' is assigned a value but never used.",["175"],["176"],"'MenuItem' is defined but never used.","'useEffect' is defined but never used.","'Footer' is defined but never used.","no-global-assign","no-unsafe-negation"]